{"version":3,"sources":["contexts/CurrentUserContext.js","utils/Api.js","assets/icons/Logo_vector.svg","components/Header.js","components/Card.js","assets/images/avatar_photo.png","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/FormValidator.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","customFetch","url","properties","fetch","then","response","ok","json","Promise","reject","status","statusText","catch","error","console","log","mainApi","groupId","apiKey","baseUrl","this","headers","authorization","cardData","method","body","JSON","stringify","name","link","cardId","about","_id","cohort","avatarLink","avatar","Header","className","src","logo","alt","Card","onClick","onCardLike","onCardDelete","currentUser","useContext","tooltip","createRef","likes","id","liked","some","like","useState","isTooltipShown","setIsTooltipShown","useEffect","current","clientWidth","scrollWidth","owner","type","ref","style","visibility","length","Main","userInfo","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","onEnlargeAvatarClick","onCardClick","handleCardLike","cardsData","onDeleteClick","profilePhoto","map","card","item","Footer","ImagePopup","navigation","targetObj","isOpen","onClose","useKey","goLeft","goRight","navigationArrows","event","stopPropagation","FormValidator","formElement","resetValidation","inputStatus","_settings","_inputList","forEach","input","_deactivateError","classList","remove","_controlSubmit","_element","errorField","nextElementSibling","inputErrorActive","textContent","_activateError","message","add","formStatus","submitSelector","disabledButton","submitButton","_formElement","querySelector","setAttribute","removeAttribute","_checkIfInputValid","evt","target","validity","valid","validationMessage","_setEventListeners","formInput","Array","from","querySelectorAll","addEventListener","preventDefault","PopupWithForm","children","formName","formHeader","onSubmit","form","useCallback","formNode","validatedForm","enableValidation","EditProfilePopup","updateCurrentUser","setName","description","setDescription","windowId","e","Object","assign","htmlFor","value","placeholder","required","minLength","maxLength","onChange","EditAvatarPopup","avatarInput","useRef","AddPlacePopup","addNewCard","setLink","ConfirmPopup","confirmDelete","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isPlacePopupOpen","setIsPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEnlargeAvatarPopupOpen","setIsEnlargeAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCardsData","key","callback","condition","callbackRef","document","handle","removeEventListener","code","getUserInfo","a","getProfile","callData","getCards","getInitialCards","dislikePhoto","newCardData","result","likePhoto","handleDeleteCard","deleteCardPost","filter","handleAddCard","postNewCard","newCard","Cards","concat","handleClose","handleUpdateUserData","data","updateProfile","index","findIndex","parseInt","Provider","cardClicked","setUserData","updateProfilePhoto","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d99b256c.chunk.js","sourcesContent":["import React from \"react\";\nexport const CurrentUserContext = React.createContext();\n","const customFetch = (url, properties) => {\n  return fetch(url, properties)\n    .then((response) => {\n      if (response.ok) return response.json();\n      return Promise.reject(\n        `Failed with status:( ${response.status} ${response.statusText})`\n      );\n    })\n    .catch((error) => console.log(error));\n};\n\nclass Api {\n  constructor({ groupId, apiKey, baseUrl }) {\n    this.groupId = groupId;\n    this.apiKey = apiKey;\n    this.baseUrl = baseUrl;\n  }\n\n  getInitialCards() {\n    return customFetch(`${this.baseUrl}${this.groupId}/cards`, {\n      headers: {\n        authorization: `${this.apiKey}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  postNewCard(cardData) {\n    return customFetch(`${this.baseUrl}${this.groupId}/cards/`, {\n      method: \"POST\",\n      headers: {\n        authorization: `${this.apiKey}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: `${cardData.name}`,\n        link: `${cardData.link}`,\n      }),\n    });\n  }\n\n  deleteCardPost(cardId) {\n    return customFetch(`${this.baseUrl}${this.groupId}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `${this.apiKey}`,\n      },\n    });\n  }\n\n  getProfile() {\n    return customFetch(`${this.baseUrl}${this.groupId}/users/me`, {\n      headers: {\n        authorization: `${this.apiKey}`,\n      },\n    });\n  }\n\n  updateProfile({ name, about }) {\n    return customFetch(`${this.baseUrl}${this.groupId}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `${this.apiKey}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${about}`,\n        _id: `${this.apiKey}`,\n        cohort: `${this.groupId}`,\n      }),\n    });\n  }\n\n  updateProfilePhoto(avatarLink) {\n    return customFetch(`${this.baseUrl}${this.groupId}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `${this.apiKey}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: `${avatarLink}`,\n      }),\n    });\n  }\n\n  likePhoto(cardId) {\n    return customFetch(`${this.baseUrl}${this.groupId}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `${this.apiKey}`,\n      },\n    });\n  }\n\n  dislikePhoto(cardId) {\n    return customFetch(`${this.baseUrl}${this.groupId}/cards/likes/${cardId}`, {\n      method: \"Delete\",\n      headers: {\n        authorization: `${this.apiKey}`,\n      },\n    });\n  }\n}\nconst options = {\n  baseUrl: \"https://around.nomoreparties.co/v1/\",\n  apiKey: \"69483cc0-2fd4-4d47-b549-ff7c13f67c88\",\n  groupId: \"group-12\",\n};\n\nconst mainApi = new Api(options);\nexport default mainApi;\n","export default __webpack_public_path__ + \"static/media/Logo_vector.e57222ff.svg\";","import logo from \"../assets/icons/Logo_vector.svg\";\n\nconst Header = () => {\n  return (\n    <div>\n      <header className='header'>\n        <img className='header__logo' src={logo} alt=\"site's logo\" />\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect, createRef, useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nconst Card = ({ cardData, onClick, onCardLike, onCardDelete }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const tooltip = createRef();\n  const { name, likes, link, _id: id } = cardData;\n\n  const liked = likes.some((like) => like._id === currentUser._id);\n\n  const [isTooltipShown, setIsTooltipShown] = useState(false);\n\n  useEffect(() => {\n    setIsTooltipShown(\n      tooltip.current.clientWidth < tooltip.current.scrollWidth\n    );\n  }, [tooltip]);\n\n  const handleLikeClick = () => onCardLike(id, liked);\n\n  function handleClick() {\n    return onClick(cardData);\n  }\n\n  return (\n    <div>\n      {/* {console.log(likes)} */}\n      <div className='card'>\n        {cardData.owner._id === currentUser._id && (\n          <button\n            className='button button_type_delete'\n            type='click'\n            onClick={() => onCardDelete(cardData)}\n          ></button>\n        )}\n        <img\n          alt={name}\n          src={link}\n          className='card__image'\n          onClick={handleClick}\n        />\n        <div className='card__footer'>\n          <h2 ref={tooltip} className='card__text'>\n            {name}\n          </h2>\n          <div className='card__likes-container'>\n            <button\n              className={`button card__like-button ${\n                liked && \"card__like-button_active\"\n              }`}\n              id='likebtn'\n              aria-label='heart icon (like)'\n              onClick={handleLikeClick}\n            />\n            <label\n              className='card__like-label'\n              style={{ visibility: likes.length ? \"visible\" : \"hidden\" }}\n            >\n              {likes.length}\n            </label>\n          </div>\n          {isTooltipShown && (\n            <div className='card__overflow-tooltip'>{name}</div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/avatar_photo.15862bec.png\";","import Card from \"./Card\";\n\nimport profilePhoto from \"../assets/images/avatar_photo.png\";\n\nconst Main = ({\n  userInfo,\n  onEditProfileClick,\n  onAddPlaceClick,\n  onEditAvatarClick,\n  onEnlargeAvatarClick,\n  onCardClick,\n  handleCardLike,\n  cardsData,\n  onDeleteClick,\n}) => {\n  //RenderCards function.\n  const renderCard = (item) => (\n    <Card\n      onClick={onCardClick}\n      cardData={item}\n      onCardLike={handleCardLike}\n      onCardDelete={onDeleteClick}\n      key={item._id}\n    />\n  );\n\n  return (\n    <div>\n      <main>\n        <section className='profile'>\n          <div className='profile__photo-container'>\n            <img\n              className='profile__photo'\n              src={userInfo ? userInfo.avatar : profilePhoto}\n              alt={\n                userInfo\n                  ? `Photo of ${userInfo.name}`\n                  : \"Photo of Kristine Weiss\"\n              }\n            />\n            <div className='profile__photo-buttons'>\n              <button\n                className='button button_type_edit-profile-image'\n                onClick={onEditAvatarClick}\n              ></button>\n              <button\n                className='button button_type_enlarge-profile-image'\n                onClick={() => {\n                  onEnlargeAvatarClick(userInfo);\n                }}\n              ></button>\n            </div>\n          </div>\n          <div className='profile__description'>\n            <h1 className='profile__name'>\n              {userInfo ? userInfo.name : \"Kristine Weiss\"}\n            </h1>\n            <button\n              className='button profile__button-edit'\n              type='button'\n              aria-label='Edit profile'\n              onClick={onEditProfileClick}\n            ></button>\n            <p className='profile__about'>\n              {userInfo\n                ? userInfo.about\n                : \"Travel guide, food enthusiastic and culture lover\"}\n            </p>\n          </div>\n          <button\n            className='button profile__button-add'\n            type='button'\n            aria-label='Add or create new profile'\n            onClick={onAddPlaceClick}\n          ></button>\n        </section>\n\n        <section className='locations'>\n          {cardsData.map((card) => renderCard(card))}\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Main;\n","const Footer = () => {\n  return (\n    <div>\n      <footer className='footer'>\n        <p className='footer__about'>&copy; 2020 Around The U.S.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","const ImagePopup = ({\n  navigation,\n  targetObj,\n  isOpen,\n  onClose,\n  id,\n  useKey,\n  goLeft,\n  goRight,\n}) => {\n  const navigationArrows = [\n    <div\n      key='leftNav'\n      className='navigation-arrow navigation-arrow_left'\n      onClick={goLeft}\n    ></div>,\n    <div\n      key='rightNav'\n      className='navigation-arrow navigation-arrow_right'\n      onClick={goRight}\n    ></div>,\n  ];\n\n  useKey(\"ArrowRight\", goRight, isOpen);\n  useKey(\"ArrowLeft\", goLeft, isOpen);\n  useKey(\"Escape\", onClose, isOpen);\n\n  return (\n    <div\n      className={`popup popup_gallery ${isOpen ? \"popup_active\" : \"\"}`}\n      onClick={onClose}\n    >\n      <div\n        className='popup__gallery'\n        id={id}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n      >\n        <button\n          className='button button_type_close'\n          type='button'\n          aria-label='Close window'\n          onClick={onClose}\n        ></button>\n        <img\n          className='popup__img'\n          src={\n            !targetObj\n              ? null\n              : targetObj.link\n              ? targetObj.link\n              : targetObj.avatar\n              ? targetObj.avatar\n              : \"\"\n          }\n          alt={!targetObj ? null : targetObj.name}\n        />\n        <h2 className='popup__place-name'>\n          {!targetObj ? null : targetObj.name}\n        </h2>\n        {navigation && navigationArrows}\n      </div>\n    </div>\n  );\n};\n\nexport default ImagePopup;\n","//FormValidator Class - > Added\nclass FormValidator {\n  constructor(formElement) {\n    this._settings = {\n      formInput: \"form__input\",\n      inputStatus: \"form__input_status\",\n      submitSelector: \"button_type_submit\",\n      disabledButton: \"button_disabled\",\n      inputErrorActive: \"form__input-error_active\",\n    };\n    this._formElement = formElement;\n  }\n  //<<START>>public methods of form validation.<<START>>\n  enableValidation() {\n    return this._setEventListeners();\n  }\n\n  resetValidation = () => {\n    const { inputStatus } = this._settings;\n    this._inputList.forEach((input) => {\n      this._deactivateError(input);\n      input.classList.remove(`${inputStatus}`);\n    });\n    this._controlSubmit(true);\n    return this._element;\n  };\n  //<<END>>public methods of form validation.<<END>>\n  //<<START>> Error messages and button controls <<START>>\n  _deactivateError = (input) => {\n    const errorField = input.nextElementSibling;\n    errorField.classList.remove(this._settings.inputErrorActive);\n    errorField.textContent = \"\";\n  };\n  _activateError = (input, message) => {\n    const errorField = input.nextElementSibling;\n    errorField.classList.add(this._settings.inputErrorActive);\n    errorField.textContent = message;\n  };\n  //Controls the status of the submit button, gets form inputs status from checkIfInputValid\n  _controlSubmit = (formStatus) => {\n    const { submitSelector, disabledButton } = this._settings;\n    const submitButton = this._formElement.querySelector(`.${submitSelector}`);\n\n    if (formStatus) {\n      submitButton.classList.add(disabledButton);\n      submitButton.setAttribute(\"disabled\", true);\n    } else {\n      submitButton.classList.remove(disabledButton);\n      submitButton.removeAttribute(\"disabled\");\n    }\n  };\n  _checkIfInputValid = (evt) => {\n    const input = evt.target;\n    input.classList.add(this._settings.inputStatus);\n    if (!input.validity.valid) {\n      this._activateError(input, input.validationMessage);\n    } else {\n      this._deactivateError(input);\n    }\n\n    const formStatus = this._inputList.some((item) => !item.validity.valid);\n    return this._controlSubmit(formStatus);\n  };\n  //<<END>> Error messages control <<END>>\n  //<<START>> Listeners control <<START>>\n  _setEventListeners = () => {\n    const { formInput } = this._settings;\n    this._inputList = Array.from(\n      this._formElement.querySelectorAll(`.${formInput}`)\n    );\n    this._formElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n    });\n    this._formElement.addEventListener(\"reset\", this.resetValidation);\n    this._inputList.forEach((input) => {\n      input.addEventListener(\"input\", this._checkIfInputValid);\n    });\n    return this._element;\n  };\n\n  //<<END>> Listeners control <<END>>\n}\n\nexport default FormValidator;\n","import { useCallback } from \"react\";\nimport FormValidator from \"../utils/FormValidator\";\nconst PopupWithForm = ({\n  children,\n  formName,\n  formHeader,\n  onClose,\n  id,\n  isOpen,\n  onSubmit,\n}) => {\n  //useCallback is practically combined useEffect and createRef. do ignore the \"unnecessary dependency: 'isOpen'\" warning.\n  //as it required to reset the form on reopening.\n  const form = useCallback(\n    (formNode) => {\n      if (formNode !== null) {\n        const validatedForm = new FormValidator(formNode);\n        validatedForm.enableValidation();\n        return validatedForm.resetValidation();\n      }\n    },\n    [isOpen]\n  );\n\n  return (\n    <div className={`popup ${isOpen ? \"popup_active\" : \"\"}`} onClick={onClose}>\n      <div\n        className='popup__window'\n        id={id}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n      >\n        <button\n          className='button button_type_close'\n          type='button'\n          aria-label='Close window'\n          onClick={onClose}\n        ></button>\n        <h2 className='popup__title'>{formHeader}</h2>\n        <form className='form' ref={form} name={`${formName}`}>\n          {children}\n          <button\n            className='button button_type_submit'\n            type='submit'\n            onClick={onSubmit}\n          >\n            Save\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupWithForm;\n","import { useContext, useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\nconst EditProfilePopup = ({ isOpen, onClose, updateCurrentUser, useKey }) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const currentUser = useContext(CurrentUserContext);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    updateCurrentUser(\n      Object.assign({}, currentUser, { name: name, about: description })\n    );\n    onClose();\n  };\n\n  useKey(\"Escape\", onClose, isOpen);\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      windowId='w-edit'\n      formHeader='Edit Profile'\n      formName='editWindow'\n      onSubmit={formSubmit}\n    >\n      <label htmlFor='name' className='form__field'>\n        <input\n          className='form__input'\n          type='text'\n          name='name'\n          id='name'\n          value={name || \"\"}\n          placeholder='Insert name here...'\n          required\n          minLength='2'\n          maxLength='40'\n          onChange={(e) => setName(e.target.value)}\n        />\n        <span className='form__input-error'></span>\n      </label>\n      <label htmlFor='about' className='form__field'>\n        <input\n          className='form__input'\n          type='text'\n          name='about'\n          id='about'\n          value={description || \"\"}\n          placeholder='Insert job here...'\n          required\n          minLength='2'\n          maxLength='200'\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <span className='form__input-error'></span>\n      </label>\n    </PopupWithForm>\n  );\n};\n\nexport default EditProfilePopup;\n","import { useContext, useEffect, useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nconst EditAvatarPopup = ({ isOpen, onClose, updateCurrentUser, useKey }) => {\n  const currentUser = useContext(CurrentUserContext);\n  const avatarInput = useRef();\n\n  //fills the field on open with current value.\n  useEffect(() => {\n    avatarInput.current.value = currentUser.avatar;\n  }, [currentUser, isOpen]);\n  useEffect(() => {}, [isOpen]);\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    updateCurrentUser(\n      Object.assign({}, currentUser, { avatar: avatarInput.current.value })\n    );\n    onClose();\n  };\n\n  useKey(\"Escape\", onClose, isOpen);\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      windowId='w-editpic'\n      formHeader='Change profile picture'\n      formName='editprofpic'\n      onSubmit={formSubmit}\n    >\n      <label htmlFor='pictureurl' className='form__field'>\n        <input\n          ref={avatarInput}\n          className='form__input'\n          type='url'\n          name='avatar'\n          id='pictureurl'\n          placeholder='insert url for picture'\n          required\n        />\n        <span className='form__input-error'></span>\n      </label>\n    </PopupWithForm>\n  );\n};\n\nexport default EditAvatarPopup;\n","import { useState } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst AddPlacePopup = ({ isOpen, onClose, addNewCard, useKey }) => {\n  const [name, setName] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  const fromSubmit = (e) => {\n    e.preventDefault();\n    addNewCard({ name, link });\n    //resets form fields.\n    setName(\"\");\n    setLink(\"\");\n    onClose();\n  };\n\n  useKey(\"Escape\", onClose, isOpen);\n\n  return (\n    <div>\n      <PopupWithForm\n        isOpen={isOpen}\n        onClose={onClose}\n        windowId='w-add'\n        formHeader='New place'\n        formName='addWindow'\n        onSubmit={fromSubmit}\n      >\n        <label htmlFor='place-title' className='form__field'>\n          <input\n            className='form__input'\n            type='text'\n            name='name'\n            id='place-title'\n            placeholder='Title'\n            value={name}\n            required\n            minLength='1'\n            maxLength='30'\n            onChange={(e) => setName(e.target.value)}\n          />\n          <span className='form__input-error'></span>\n        </label>\n        <label htmlFor='image-link' className='form__field'>\n          <input\n            className='form__input'\n            type='url'\n            name='link'\n            id='image-link'\n            placeholder='Image link'\n            value={link}\n            required\n            onChange={(e) => setLink(e.target.value)}\n          />\n          <span className='form__input-error'></span>\n        </label>\n      </PopupWithForm>\n    </div>\n  );\n};\n\nexport default AddPlacePopup;\n","import React from \"react\";\n\nconst ConfirmPopup = ({ isOpen, onClose, confirmDelete }) => {\n  const onConfirm = () => {\n    confirmDelete();\n    onClose();\n  };\n  return (\n    <div className={`popup ${isOpen ? \"popup_active\" : \"\"}`} onClick={onClose}>\n      <div\n        className='popup__window'\n        id='w-confirm'\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n      >\n        <button\n          className='button button_type_close'\n          type='button'\n          aria-label='Close window'\n          onClick={onClose}\n        ></button>\n        <h2 className='popup__title'>Are you sure?</h2>\n        <button\n          className='button button_type_submit'\n          type='button'\n          onClick={onConfirm}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmPopup;\n","import { useEffect, useState, useRef } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport mainApi from \"../utils/Api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ConfirmPopup from \"./ConfirmPopup\";\n\nfunction App() {\n  //isOpened\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isPlacePopupOpen, setIsPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEnlargeAvatarPopupOpen, setIsEnlargeAvatarPopupOpen] =\n    useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false)\n  //data holding states\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cardsData, setCardsData] = useState([]);\n\n  //function to add event listeners\n  function useKey(key, callback, condition) {\n    const callbackRef = useRef(callback);\n    useEffect(() => {\n      callbackRef.current = callback;\n    })\n\n    useEffect(() => {\n      if (!condition) { return; }\n      function handle(event) {\n        if (event.code === key) {\n          callbackRef.current(event)\n        }\n      }\n      document.addEventListener(\"keydown\", handle);\n      return () => document.removeEventListener(\"keydown\", handle);\n    }, [key, condition])\n  }\n  //<<START>>data fetching functions <<START>>\n  const getUserInfo = async () => {\n    try {\n      const callData = await mainApi.getProfile();\n      callData && setCurrentUser(callData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getCards = async () => {\n    try {\n      const callData = await mainApi.getInitialCards();\n      callData && setCardsData(callData)\n    }\n    catch (error) { console.log(error) }\n  }\n  //<<END>>data fetching functions <<END>>\n  //<<START>>Card actions handles<<START>>\n  const handleCardLike = async (id, status) => {\n    if (status)\n      try {\n        const result = await mainApi.dislikePhoto(id).then(newCardData => (cardsData.map((card) => card = newCardData._id === card._id ? newCardData : card)))\n        setCardsData(result)\n      }\n      catch (error) { console.log(error) } else\n      try {\n        const result = await mainApi.likePhoto(id).then(newCardData => (cardsData.map((card) => card = newCardData._id === card._id ? newCardData : card)))\n        setCardsData(result);\n      }\n      catch (error) { console.log(error) };\n  };\n\n  const handleDeleteCard = async () => {\n    const id = selectedCard._id;\n    try {\n      mainApi.deleteCardPost(id).then(setCardsData(cardsData.filter(card => card._id !== id)))\n    }\n    catch (error) { console.log(error) }\n  }\n\n  const handleAddCard = async (card) => {\n    try {\n      const newCard = await mainApi.postNewCard(card)\n      setCardsData(Cards => {\n        return [newCard].concat(Cards)\n      })\n    }\n    catch (error) { console.log(error) }\n  }\n  //<<END>>Card actions handles<<END>>\n  //<<START>>Window openers & closers<<START>>\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsPlacePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEnlargeAvatarClick = (currentUser) => {\n    setCurrentUser(currentUser);\n    setIsEnlargeAvatarPopupOpen(true);\n  };\n\n  const handleCardClick = (cardClicked) => {\n    setSelectedCard(cardClicked);\n    setIsImagePopupOpen(true);\n  };\n  const handleDeleteClick = (cardClicked) => {\n    setSelectedCard(cardClicked)\n    setIsConfirmPopupOpen(true)\n  };\n\n\n  // };\n  const handleClose = () => {\n    setIsImagePopupOpen(false);\n    setIsEnlargeAvatarPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsConfirmPopupOpen(false);\n  };\n  //<<END>>Window openers & closers<<END>>\n  //<<START>>Profile updating handlers<<START>>\n  const handleUpdateUserData = (data) => {\n    mainApi.updateProfile(data).then(setCurrentUser(data));\n  };\n\n  const handleUpdateAvatarImage = (data) => {\n    mainApi.updateProfilePhoto(data.avatar).then(setCurrentUser(data));\n  };\n  //<<END>>Profile updating handlers<<END>>\n  //<<START>>Navigation handlers<<START>>\n  const goLeft = () => {\n    let index = cardsData.findIndex(item => item === selectedCard);\n    index = parseInt(index - 1) >= 0 ? parseInt(index - 1) : cardsData.length - 1;\n    setSelectedCard(cardsData[index])\n  }\n  const goRight = () => {\n    let index = cardsData.findIndex(item => item === selectedCard);\n    index = parseInt(index + 1) <= cardsData.length - 1 ? parseInt(index + 1) : 0;\n    setSelectedCard(cardsData[index])\n  }\n  //<<END>>Navigation handlers<<END>>\n\n  //initialization\n  useEffect(() => {\n    getCards();\n    getUserInfo()\n  }, [])\n\n  return (\n    <div className='page'>\n      <div className='page__wrap'>\n        <CurrentUserContext.Provider value={currentUser}>\n          <Header />\n          <Main\n            onEditProfileClick={handleEditProfileClick}\n            onAddPlaceClick={handleAddPlaceClick}\n            onEditAvatarClick={handleEditAvatarClick}\n            onEnlargeAvatarClick={handleEnlargeAvatarClick}\n            onCardClick={handleCardClick}\n            userInfo={currentUser}\n            setUserData={handleUpdateUserData}\n            handleCardLike={handleCardLike}\n            onDeleteClick={handleDeleteClick}\n            cardsData={cardsData}\n\n          />\n          <Footer />\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={handleClose}\n            updateCurrentUser={handleUpdateUserData}\n            useKey={useKey}\n          />\n\n          <AddPlacePopup\n            isOpen={isPlacePopupOpen}\n            onClose={handleClose}\n            addNewCard={handleAddCard}\n            useKey={useKey}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={handleClose}\n            updateCurrentUser={handleUpdateAvatarImage}\n            useKey={useKey}\n          />\n\n          <ImagePopup\n            isOpen={isImagePopupOpen}\n            onClose={handleClose}\n            id='w-img'\n            targetObj={selectedCard}\n            navigation={true}\n            useKey={useKey}\n            goLeft={goLeft}\n            goRight={goRight}\n          />\n          <ImagePopup\n            isOpen={isEnlargeAvatarPopupOpen}\n            onClose={handleClose}\n            id='w-piclrg'\n            targetObj={currentUser}\n            navigation={false}\n            useKey={useKey}\n            goLeft={goLeft}\n            goRight={goRight}\n          />\n          <ConfirmPopup\n            isOpen={isConfirmPopupOpen}\n            onClose={handleClose}\n            confirmDelete={handleDeleteCard}\n          />\n        </CurrentUserContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}